{"version":3,"sources":["components/Nav.tsx","img/home.png","components/main/Home.tsx","img/alldreams.png","components/main/ListOfDreams.tsx","redux/dreams/dreamActionTypes.ts","redux/dreams/dreamActionCreator.tsx","components/main/Search.tsx","components/main/AllDreams.tsx","img/adddreams.png","components/main/AddADream.tsx","img/adddream.png","components/NotFound.tsx","img/github.png","img/linedin.png","components/Footer.tsx","img/adreama.png","components/main/DreamDetails.tsx","App.tsx","redux/dreams/dreamReducer.tsx","index.tsx"],"names":["Nav","className","to","Home","src","home_img","alt","ListOfDreams","obj","_id","title","date","GET_ALL_DREAMS_REQUEST","GET_ALL_DREAMS_SUCCESS","GET_ALL_DREAMS_FAILURE","ANY_DREAM_REQUEST","ANY_DREAM_REQUEST_RESULT","GET_STATE","anyDreamRequest","type","dreamActionTypes","anyDreamRequestResult","data","payload","searchType","getDreams","dispatch","axios","get","API","then","res","dreamsData","catch","err","error","requestFailed","connect","state","dreams","useState","search","setSearch","message","setMessage","useDispatch","parseInt","searched","filter","d","useEffect","arr","dreamType","length","checkIfDreamTypeExists","htmlFor","name","id","onChange","e","target","value","filteredData","loading","onClick","delete","sort","first","second","a","Date","getDate","map","all_dreams","AddADream","setTitle","description","setDescription","setDate","setType","maxDate","setMaxDate","today","day","month","getMonth","year","getFullYear","dayFormat","monthFormat","toString","formatedDate","onSubmit","preventDefault","dream","post","required","max","add_dream","NotFound","pic","Footer","href","github","linkedin","useParams","update","setUpdate","lastUpdated","setLastUpdated","history","useHistory","updatedAt","toUTCString","placeholder","typeNum","patch","updateFields","number","dreamTypes","push","handleDelete","adream","App","basename","process","exact","path","initialState","dreamReducer","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.749be9c5.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\"\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <nav className='nav'>\r\n      <ul className=\"nav-list\">\r\n        <NavLink to='/' className=\"nav-list-item\">Home</NavLink>\r\n        <NavLink to='/dreams' className=\"nav-list-item\">All Dreams</NavLink>\r\n        <NavLink to='/add-dream' className=\"nav-list-item\">Add A Dream</NavLink>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Nav\r\n","export default __webpack_public_path__ + \"static/media/home.f5c9f331.png\";","import home_img from '../../img/home.png';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className='main-home'>\r\n      <h1>Dreams</h1>\r\n      <div className=\"main-home-text\">\r\n        <p>\r\n        A dream is a succession of <b>images, ideas, emotions, and sensations</b> that usually occur involuntarily in the mind during certain stages of sleep. The content and function of dreams are not fully understood, although they have been a topic of scientific, philosophical and religious interest throughout recorded history. Dream interpretation is the attempt at drawing meaning from dreams and searching for an underlying message. The scientific study of dreams is called <b>oneirology</b>. The length of a dream can vary; they may last for a few seconds, or approximately 20–30 minutes.\r\n        </p>\r\n      </div>\r\n      <div className=\"main-home-picture\">\r\n        <img src={home_img} alt='' /> \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","export default __webpack_public_path__ + \"static/media/alldreams.58278675.png\";","import { Link } from \"react-router-dom\"\r\nimport { IDream } from \"../../react-app-env\"\r\n\r\nconst ListOfDreams = (obj: IDream) => {\r\n  return (\r\n    <div className='dream'>\r\n      <Link to={`/dreams/${obj._id}`}>\r\n        <h2>\r\n          {obj.title}\r\n        </h2>\r\n      </Link>\r\n      <p>{obj.date}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListOfDreams\r\n","export const GET_ALL_DREAMS_REQUEST = 'GET_ALL_DREAMS_REQUEST'\r\nexport const GET_ALL_DREAMS_SUCCESS = 'GET_ALL_DREAMS_SUCCESS'\r\nexport const GET_ALL_DREAMS_FAILURE = 'GET_ALL_DREAMS_FAILURE'\r\nexport const ANY_DREAM_REQUEST = 'ANY_DREAM_REQUEST'\r\nexport const ANY_DREAM_REQUEST_RESULT = 'ANY_DREAM_REQUEST_RESULT'\r\nexport const GET_STATE = 'GET_STATE'\r\n","import { DreamAction } from '../../react-app-env';\r\nimport * as dreamActionTypes from './dreamActionTypes'\r\nimport { DispatchDreamType } from '../../react-app-env'\r\nimport axios from 'axios';\r\nimport { API } from '../..';\r\n\r\nexport const dreamsRequest = ():DreamAction => {\r\n  return {\r\n    type: dreamActionTypes.GET_ALL_DREAMS_REQUEST\r\n  }\r\n}\r\n\r\nexport const requestSuccess = (data:any):DreamAction => {\r\n  return {\r\n    type: dreamActionTypes.GET_ALL_DREAMS_SUCCESS,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const requestFailed = (error:object | string):DreamAction => {\r\n  return {\r\n    type: dreamActionTypes.GET_ALL_DREAMS_FAILURE,\r\n    payload: error\r\n  }\r\n}\r\n\r\nexport const anyDreamRequest = ():DreamAction => {\r\n  return {\r\n    type: dreamActionTypes.ANY_DREAM_REQUEST\r\n  }\r\n}\r\n\r\nexport const anyDreamRequestResult = (data: any):DreamAction => {\r\n  return {\r\n    type: dreamActionTypes.ANY_DREAM_REQUEST_RESULT,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const searchType = (data: any):DreamAction => {\r\n  return {\r\n    type: dreamActionTypes.GET_STATE,\r\n    payload: data\r\n  }\r\n}\r\n\r\n// NOTE: Async action creators\r\nexport const getDreams = () => {\r\n  return (dispatch: DispatchDreamType) => {\r\n    dispatch(dreamsRequest())\r\n    axios.get(API)\r\n      .then((res) => {\r\n        const dreamsData: [] = res.data;\r\n        dispatch(requestSuccess(dreamsData))\r\n      })\r\n      .catch((err) => {\r\n        const error: string | object = err;\r\n        dispatch(requestFailed(error))\r\n      })\r\n  }\r\n}","import { useEffect, useState } from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { DreamState, IDream } from \"../../react-app-env\";\r\nimport { getDreams, searchType } from '../../redux/dreams/dreamActionCreator';\r\n\r\nconst Search = ({ dreams }: any) => {\r\n  const [ search, setSearch ] = useState('');\r\n  const [ message, setMessage ] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const type:number = parseInt(search)\r\n\r\n  const searched = dreams.filter((d:IDream) => parseInt(d.type) === type)\r\n  \r\n  // Checking if type of dream exists\r\n  const checkIfDreamTypeExists = (type:string, arr: []) => {\r\n    let dreamType:string;\r\n\r\n    switch(type) {\r\n      case '0':\r\n        dreamType = 'Happy'\r\n        break\r\n\r\n      case '1': \r\n        dreamType = 'Sad'\r\n        break\r\n\r\n      case '2':\r\n        dreamType = 'Exciting'\r\n        break\r\n\r\n      case '3': \r\n        dreamType = 'Scary'\r\n        break\r\n\r\n      default:\r\n        dreamType = ''\r\n        break\r\n    }\r\n\r\n    if (type !== '' && arr.length === 0) {\r\n      setMessage(`There are none ${dreamType} dreams.`);\r\n    }\r\n  }\r\n\r\n  const findSelectedTypeOfDream = () => {\r\n    if (search !== '') {\r\n      dispatch(searchType(searched))\r\n      setMessage('')\r\n    } else {\r\n      dispatch(getDreams())\r\n      // Resets filtered state to empty array\r\n      dispatch(searchType([])) \r\n      setMessage('')\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Search based on dropdown selection\r\n    findSelectedTypeOfDream();\r\n    checkIfDreamTypeExists(search, searched);\r\n  },[search])\r\n\r\n\r\n  return (\r\n    <div className=\"search-dreams\">\r\n      <label htmlFor=\"search\">Search dreams by type: </label>\r\n      <select name=\"type\" id=\"type\" onChange={(e) => setSearch(e.target.value)}>\r\n        <option value=''>All dreams...</option>\r\n        <option value='0'>Happy</option>\r\n        <option value='1'>Sad</option>\r\n        <option value='2'>Exciting</option>\r\n        <option value='3'>Scary</option>\r\n      </select>\r\n      <div className=\"message\">\r\n        { message }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state:DreamState) => {\r\n  return {\r\n    dreams: state.data\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Search)\r\n","import all_dreams from '../../img/alldreams.png';\r\nimport ADream from \"./ListOfDreams\";\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { DreamState, IDream } from \"../../react-app-env\";\r\nimport { useEffect } from 'react';\r\nimport { anyDreamRequest, anyDreamRequestResult, getDreams } from '../../redux/dreams/dreamActionCreator';\r\nimport axios from 'axios';\r\nimport { API } from '../..';\r\nimport Search from './Search';\r\n\r\nconst AllDreams = ({ dreams, filteredData, loading} : any) => { \r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getDreams())\r\n  }, [])\r\n\r\n  const handleDelete = () => {\r\n    dispatch(anyDreamRequest())\r\n\r\n    axios.delete(API)\r\n      .then((res) => {\r\n        dispatch(anyDreamRequestResult(res.data.message))\r\n        dispatch(getDreams())\r\n      })\r\n      .catch((err) => {\r\n        dispatch(anyDreamRequestResult(err))\r\n      })\r\n  }\r\n  \r\n  return (\r\n    <div className='main-all-dreams'>\r\n      <h1>List of Dreams</h1>\r\n      <div className=\"dream-details-buttons\">\r\n        <button onClick={handleDelete}>Delete All Dreams</button>\r\n      </div>\r\n\r\n      <Search />\r\n\r\n      <div className=\"all-dreams\">\r\n        {\r\n        loading ? \r\n          <div className='loading'>Loading...</div> :\r\n          dreams.length != 0 &&  filteredData.length === 0 ? \r\n            dreams\r\n            .sort((first:any, second:any) => {\r\n              // Converting string to date\r\n              let a = new Date(first.date)\r\n              let b = new Date(second.date)\r\n              \r\n              // Sorting by date dreamt\r\n              return b.getDate() - a.getDate()\r\n            })\r\n            .map((obj: IDream) => {\r\n              return <ADream key={obj._id} {...obj} />\r\n            }) : \r\n          filteredData.length !== 0 ? \r\n          filteredData.map((obj: IDream) => {\r\n            return <ADream key={obj._id} {...obj} />\r\n          }) :\r\n          <div className='error'>\r\n            Dream log empty\r\n          </div> \r\n        }\r\n      </div>\r\n      <div className=\"main-home-picture\">\r\n        <img src={all_dreams} alt='' /> \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state:DreamState) => {\r\n  return {\r\n    dreams: state.data,\r\n    filteredData: state.filteredData,\r\n    loading: state.loading\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AllDreams)","export default __webpack_public_path__ + \"static/media/adddreams.403ccaea.png\";","import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { API } from '../..';\r\nimport add_dream from '../../img/adddreams.png';\r\nimport { DispatchDreamType } from '../../react-app-env';\r\nimport { anyDreamRequest, anyDreamRequestResult } from '../../redux/dreams/dreamActionCreator';\r\n\r\nconst AddADream = () => {\r\n  const [ title, setTitle ] = useState('');\r\n  const [ description, setDescription ] = useState('');\r\n  const [ date, setDate ] = useState('');\r\n  const [ type, setType ] = useState('');\r\n  const [ message, setMessage ] = useState('');\r\n  const [ maxDate, setMaxDate ] = useState('2021-05-10')\r\n\r\n  // NOTE: Restricting dates from today in date picker\r\n  useEffect(() => {\r\n    let today = new Date();\r\n    let day:number = today.getDate()\r\n    let month:number = today.getMonth() + 1\r\n    let year:number = today.getFullYear()\r\n\r\n    let dayFormat:string = '';\r\n    let monthFormat:string = '';\r\n\r\n    if (day < 10) {\r\n      dayFormat = `0${day.toString()}`\r\n    } else {\r\n      dayFormat = day.toString()\r\n    }\r\n\r\n    if (month < 10) {\r\n      monthFormat = `0${month.toString()}` \r\n    } else {\r\n      monthFormat = month.toString()\r\n    }\r\n\r\n    let formatedDate = `${year}-${monthFormat}-${dayFormat}`\r\n\r\n    setMaxDate(formatedDate)\r\n  }, [])\r\n\r\n  let dispatch: DispatchDreamType = useDispatch();\r\n\r\n  const handleSubmit = (e:React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    dispatch(anyDreamRequest())\r\n\r\n    if (type === '') {\r\n      return setMessage('You have to choose type of dream!')\r\n    }\r\n\r\n    let dream: object = {\r\n      title,\r\n      description,\r\n      date,\r\n      type\r\n    }\r\n\r\n    axios.post(API, dream)\r\n    .then((res) => {\r\n      setMessage(res.data)\r\n      dispatch(anyDreamRequestResult(res.data.message))\r\n\r\n      setTitle('')\r\n      setDescription('')\r\n      setDate('')\r\n      setType('')\r\n    })\r\n    .catch((err) => {\r\n      setMessage('Request to the server failed :(')\r\n      dispatch(anyDreamRequestResult(err))\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className='main-add-dream'>\r\n      <h1>Add A Dream</h1>\r\n      <div className='all-dreams dream-form'>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className='form-items'>\r\n            <label htmlFor='title'>Title</label>\r\n            <input type=\"text\" name=\"title\" id=\"title\" value={title} onChange={(e) => setTitle(e.target.value)} required/>\r\n          </div>\r\n\r\n          <div className='form-items'>\r\n            <label htmlFor='description'>Description</label>\r\n            <input type=\"text\" name=\"description\" id=\"description\" value={description} onChange={(e) => setDescription(e.target.value)} required/>\r\n          </div>\r\n\r\n          <div className='form-items'>\r\n            <label htmlFor='date'>Date</label>\r\n            <input type='date' name=\"date\" max={maxDate} id=\"date\" value={date} onChange={(e) => setDate(e.target.value)} required/>\r\n          </div>\r\n\r\n          <div className='form-items'>\r\n            <label htmlFor='type'>Type of dream</label>\r\n            <select name=\"type\" id=\"type\" onChange={(e) => setType(e.target.value)} required>\r\n              <option value=''>Choose...</option>\r\n              <option value='happy'>Happy</option>\r\n              <option value='sad'>Sad</option>\r\n              <option value='exciting'>Exciting</option>\r\n              <option value='scary'>Scary</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"dream-details-buttons\">\r\n              <button>Add a Dream</button>\r\n            </div>\r\n        </form>\r\n\r\n        <div className=\"message\">\r\n          { message }\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"main-home-picture\">\r\n        <img src={add_dream} alt='Dreamy picture' /> \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddADream\r\n","export default __webpack_public_path__ + \"static/media/adddream.5915c82a.png\";","import pic from '../img/adddream.png';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className='not-found'>\r\n      <h1>Not Found</h1>\r\n      <div className=\"main-home-picture\">\r\n        <img src={pic} alt='' />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotFound\r\n","export default __webpack_public_path__ + \"static/media/github.7c0dc29d.png\";","export default __webpack_public_path__ + \"static/media/linedin.b1bebb39.png\";","import github from '../img/github.png';\r\nimport linkedin from '../img/linedin.png';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className='footer'>\r\n      <div>Background picture taken from <a href='https://pngtree.com/so/pagedecorative'>pagedecorative - pngtree.com</a></div>\r\n      <div>Home,AddADream,DreamDetails picture taken from <a href='https://pngtree.com/so/ripped-paper'>ripped paper - pngtree.com</a></div>\r\n      <div>AllDreams picture taken from <a href='https://pngtree.com/so/dream-catcher-clipart'>dream catcher - pngtree.com</a></div>\r\n      <b>Made by Kristina &copy; 2021</b>\r\n      <div className='social'>\r\n        <a href='https://github.com/Kristina-11'>\r\n          <img src={github} alt='github icon' />\r\n        </a>\r\n        <a href='https://www.linkedin.com/in/kristina91jovanovic11/'>\r\n          <img src={linkedin} alt='linkedin icon' />\r\n        </a>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","export default __webpack_public_path__ + \"static/media/adreama.05459a24.png\";","import { connect, useDispatch } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { IDream } from \"../../react-app-env\";\r\nimport adream from '../../img/adreama.png';\r\nimport { anyDreamRequest, anyDreamRequestResult, getDreams } from '../../redux/dreams/dreamActionCreator';\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { API } from \"../..\";\r\n\r\ntype dreamParam = {\r\n  id: string\r\n}\r\n\r\nconst DreamDetails = ({ dreams }: any) => {\r\n  const { id } = useParams<dreamParam>();\r\n  const loading = dreams.loading;\r\n  \r\n  const [ title, setTitle ] = useState('');\r\n  const [ description, setDescription ] = useState('');\r\n  const [ date, setDate ] = useState('');\r\n  const [ type, setType ] = useState<any>();\r\n  const [ update, setUpdate ] = useState(false);\r\n  const [ lastUpdated, setLastUpdated ] = useState('');\r\n  const [ message, setMessage ] = useState('');\r\n\r\n  let dispatch = useDispatch();\r\n  let history = useHistory();\r\n\r\n  // Getting one dream\r\n  useEffect(() => {\r\n    axios.get(API + `/${id}`)\r\n    .then((res) => {\r\n      setTitle(res.data.title)\r\n      setDescription(res.data.description)\r\n      setDate(res.data.date)\r\n      setType(res.data.type)\r\n\r\n      let formatedDate = new Date(res.data.updatedAt)\r\n      setLastUpdated(formatedDate.toUTCString())\r\n    })\r\n    .catch((err) => {\r\n      dispatch(anyDreamRequestResult(err))\r\n    })\r\n  }, [update])\r\n\r\n  useEffect(() => {\r\n    dispatch(getDreams())\r\n  }, [])\r\n\r\n  let dreamTypes = (number: number) => {\r\n    switch(number) {\r\n      default:\r\n        return 'Error'\r\n\r\n      case 0:\r\n        return 'Happy'\r\n        \r\n      case 1: \r\n        return 'Sad'\r\n\r\n      case 2:\r\n        return 'Exciting'\r\n\r\n      case 3: \r\n        return 'Scary'\r\n    }\r\n  }\r\n\r\n  const handleDelete = (id: string) => {\r\n    dispatch(anyDreamRequest())\r\n    axios.delete(API + `/${id}`)\r\n    .then((res) => {\r\n      dispatch(anyDreamRequestResult(res.data.message))\r\n      history.push('/dreams')\r\n    })\r\n    .catch((err) => {\r\n      dispatch(anyDreamRequestResult(err))\r\n    })\r\n  }\r\n\r\n  const handleEdit = () => {\r\n    setUpdate(true)\r\n  }\r\n\r\n  const updateFields = (id:string) => {\r\n    let typeNum:number = parseInt(type)\r\n\r\n    let dream:object = {\r\n      title,\r\n      date,\r\n      description,\r\n      type: typeNum\r\n    }\r\n\r\n    dispatch(anyDreamRequest())\r\n    axios.patch(API + `/${id}`, dream)\r\n      .then((res) => {\r\n        dispatch(anyDreamRequestResult(res.data.message))\r\n        setUpdate(false)\r\n        setMessage(res.data.message)\r\n      })\r\n      .catch((err) => {\r\n        dispatch(anyDreamRequestResult(err))\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className='dream-details'>\r\n      {\r\n        loading ? \r\n          <div className='loading'>Loading...</div> : \r\n          ( !update ? \r\n          <> \r\n            <h1>{ title }</h1>\r\n            <h3>{ date }</h3>\r\n\r\n            <div className=\"dream-details-description\">\r\n              { description }\r\n            </div>\r\n\r\n            <div className=\"dream-details-type\">\r\n              <p>Type of dream: </p>\r\n              { \r\n                dreamTypes(type)\r\n              }\r\n            </div>\r\n\r\n            <div className=\"last-updated\">\r\n              Last updated: { lastUpdated }\r\n            </div>\r\n\r\n            <div className=\"dream-details-buttons additional\">\r\n              <button onClick={() => handleEdit()}>Edit</button>\r\n              <button onClick={() => handleDelete(id)}>Delete</button>\r\n            </div>\r\n          </> : \r\n          <div className='all-dreams dream-form'>\r\n            <div className=\"form-items\">\r\n              <label htmlFor=\"title\">Title:</label>\r\n              <input type='text' placeholder={ title } onChange={(e) => setTitle(e.target.value)} />\r\n            </div>\r\n\r\n            <div className=\"form-items\">\r\n              <label htmlFor=\"date\">Date:</label>\r\n              <input type=\"date\" placeholder={ date } onChange={(e) => {setDate(e.target.value)}} />\r\n            </div>\r\n\r\n            <div className=\"form-items\">\r\n              <label htmlFor='description'>Description</label>\r\n              <input type=\"text\" placeholder={ description } onChange={(e) => setDescription(e.target.value)} />\r\n            </div>\r\n\r\n            <div className=\"form-items\">\r\n              <p>Type of dream: </p>\r\n              <select name=\"type\" id=\"type\" onChange={(e) => setType(e.target.value)}>\r\n                <option value=''>Choose</option>\r\n                <option value='0'>Happy</option>\r\n                <option value='1'>Sad</option>\r\n                <option value='2'>Exciting</option>\r\n                <option value='3'>Scary</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"dream-details-buttons additional\">\r\n              <button onClick={() => updateFields(id)}>Done</button>\r\n            </div>\r\n          </div> )\r\n      }\r\n      <div className='message'>\r\n        { message }\r\n      </div>\r\n      <div className=\"main-home-picture details-picture\">\r\n        <img src={adream} alt='' /> \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// NOTE: Used mapState cause of useSelector not re-rendering\r\n// unless changed property\r\nconst mapStateToProps = (state: IDream) => {\r\n  return {\r\n    dreams: state\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(DreamDetails)\r\n","import './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Nav from './components/Nav';\nimport Home from './components/main/Home';\nimport AllDreams from './components/main/AllDreams';\nimport AddADream from './components/main/AddADream';\nimport NotFound from './components/NotFound';\nimport Footer from './components/Footer';\nimport DreamDetails from './components/main/DreamDetails';\n\nconst App = () => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <div className=\"wrapper\">\n        <Nav />\n\n        <main>\n          <Switch>\n            <Route exact path='/'>\n              <Home />\n            </Route>\n            <Route path='/dreams/:id'>\n              <DreamDetails />\n            </Route>\n            <Route path='/dreams'>\n              <AllDreams />\n            </Route>\n            <Route path='/add-dream'>\n              <AddADream />\n            </Route>\n            <Route path='*'>\n              <NotFound />\n            </Route>\n          </Switch>\n        </main>\n\n        <Footer />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { DreamAction, DreamState } from '../../react-app-env';\r\nimport * as dreamActionTypes from './dreamActionTypes'\r\n\r\nconst initialState: DreamState = {\r\n  loading: true,\r\n  data: [],\r\n  message: '', \r\n  filteredData: []\r\n} \r\n\r\nconst dreamReducer = \r\n(state = initialState, action: DreamAction): DreamState => {\r\n  switch(action.type) {\r\n    case dreamActionTypes.GET_STATE:\r\n      return {\r\n        ...state,\r\n        filteredData: action.payload\r\n      }\r\n    case dreamActionTypes.GET_ALL_DREAMS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n\r\n    case dreamActionTypes.GET_ALL_DREAMS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        data: action.payload,\r\n      }\r\n\r\n    case dreamActionTypes.GET_ALL_DREAMS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n\r\n    case dreamActionTypes.ANY_DREAM_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n\r\n    case dreamActionTypes.ANY_DREAM_REQUEST_RESULT:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default dreamReducer\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport App from './App';\nimport dreamReducer from './redux/dreams/dreamReducer';\n\nexport const API = 'https://dreamsapi.herokuapp.com/dreams';\n\nconst store = createStore(dreamReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}